-- MySQL Script generated by MySQL Workbench
-- Ср 20 янв 2021 17:28:04
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema shop_cosmetics
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema shop_cosmetics
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `shop_cosmetics` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `shop_cosmetics` ;

-- -----------------------------------------------------
-- Table `shop_cosmetics`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shop_cosmetics`.`users` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `firstname` VARCHAR(145) NOT NULL COMMENT 'имя',
  `lastname` VARCHAR(145) NOT NULL COMMENT 'фамилия',
  `email` VARCHAR(245) NOT NULL COMMENT 'электронная почта',
  `phone` BIGINT(20) NOT NULL COMMENT 'телефон',
  `password_hash` CHAR(65) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  UNIQUE INDEX `phone_UNIQUE` (`phone` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shop_cosmetics`.`profiles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shop_cosmetics`.`profiles` (
  `users_id` INT UNSIGNED NOT NULL,
  `gender` ENUM('m', 'f') NOT NULL,
  `birthday` DATE NOT NULL,
  `adress` VARCHAR(245) NULL DEFAULT NULL,
  `created_at` DATETIME NOT NULL DEFAULT NOW(),
  `deleted_at` DATETIME NULL DEFAULT NULL,
  `media_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`users_id`),
  INDEX `fk_profiles_users_idx` (`users_id` ASC) VISIBLE,
  INDEX `fk_profiles_media1_idx` (`media_id` ASC) VISIBLE,
  CONSTRAINT `fk_profiles_users`
    FOREIGN KEY (`users_id`)
    REFERENCES `shop_cosmetics`.`users` (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shop_cosmetics`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shop_cosmetics`.`product` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL COMMENT 'наименование товара',
  `description` TEXT NOT NULL COMMENT 'подробное описание товара',
  `decode` BIGINT NOT NULL COMMENT 'штрих код',
  `price` DECIMAL(8,2) NOT NULL COMMENT 'цена',
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shop_cosmetics`.`countru`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shop_cosmetics`.`countru` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `product_id` INT UNSIGNED NULL DEFAULT NULL,
  `countru` VARCHAR(45) NOT NULL COMMENT 'страна-производитель',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`countru` ASC, `id` ASC, `product_id` ASC) VISIBLE,
  INDEX `fk_countru_product1_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `fk_countru_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `shop_cosmetics`.`product` (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shop_cosmetics`.`brand`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shop_cosmetics`.`brand` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `product_id` INT UNSIGNED NULL DEFAULT NULL,
  `brand` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC, `product_id` ASC) VISIBLE,
  INDEX `fk_brand_product1_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `fk_brand_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `shop_cosmetics`.`product` (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shop_cosmetics`.`type_media`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shop_cosmetics`.`type_media` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shop_cosmetics`.`media`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shop_cosmetics`.`media` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(200) NOT NULL,
  `url` VARCHAR(245) NULL DEFAULT NULL,
  `blob` BLOB NULL DEFAULT NULL,
  `size` BIGINT NOT NULL DEFAULT 0,
  `product_id` INT UNSIGNED NOT NULL,
  `metadata` LONGTEXT NULL DEFAULT NULL,
  `type_media_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_media_product1_idx` (`product_id` ASC) VISIBLE,
  INDEX `fk_media_type_media1_idx` (`type_media_id` ASC) VISIBLE,
  CONSTRAINT `fk_media_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `shop_cosmetics`.`product` (`id`),
  CONSTRAINT `fk_media_type_media1`
    FOREIGN KEY (`type_media_id`)
    REFERENCES `shop_cosmetics`.`type_media` (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shop_cosmetics`.`section`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shop_cosmetics`.`section` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(150) NOT NULL,
  `product_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_section_product1_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `fk_section_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `shop_cosmetics`.`product` (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shop_cosmetics`.`catalog`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shop_cosmetics`.`catalog` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `product_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_catalog_product1_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `fk_catalog_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `shop_cosmetics`.`product` (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shop_cosmetics`.`orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shop_cosmetics`.`orders` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NULL DEFAULT NULL,
  `users_id` INT UNSIGNED NOT NULL,
  `product_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_order_users1_idx` (`users_id` ASC) VISIBLE,
  INDEX `fk_order_product1_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `fk_order_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `shop_cosmetics`.`product` (`id`),
  CONSTRAINT `fk_order_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `shop_cosmetics`.`users` (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shop_cosmetics`.`discounts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shop_cosmetics`.`discounts` (
  `profiles_users_id` INT UNSIGNED NOT NULL,
  `discount` FLOAT NULL DEFAULT NULL,
  `started_at` DATE NULL DEFAULT NULL,
  `finished_at` DATE NULL DEFAULT NULL,
  `created_at` DATETIME NOT NULL DEFAULT NOW(),
  `updated_at` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`profiles_users_id`),
  INDEX `fk_discounts_profiles1_idx` (`profiles_users_id` ASC) VISIBLE,
  CONSTRAINT `fk_discounts_profiles1`
    FOREIGN KEY (`profiles_users_id`)
    REFERENCES `shop_cosmetics`.`profiles` (`users_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shop_cosmetics`.`rewiews`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shop_cosmetics`.`rewiews` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `rewiews` TEXT NULL DEFAULT NULL,
  `product_id` INT UNSIGNED NOT NULL,
  `profiles_users_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_rewiews_product1_idx` (`product_id` ASC) VISIBLE,
  INDEX `fk_rewiews_profiles1_idx` (`profiles_users_id` ASC) VISIBLE,
  CONSTRAINT `fk_rewiews_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `shop_cosmetics`.`product` (`id`),
  CONSTRAINT `fk_rewiews_profiles1`
    FOREIGN KEY (`profiles_users_id`)
    REFERENCES `shop_cosmetics`.`profiles` (`users_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shop_cosmetics`.`likes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shop_cosmetics`.`likes` (
  `users_id` INT UNSIGNED NOT NULL,
  `rewiews_id` INT UNSIGNED NULL DEFAULT NULL,
  `product_id` INT UNSIGNED NULL DEFAULT NULL,
  UNIQUE INDEX `index1` (`users_id` ASC, `rewiews_id` ASC) VISIBLE,
  UNIQUE INDEX `index2` (`users_id` ASC, `product_id` ASC) VISIBLE,
  INDEX `fk_likes_rewiews1_idx` (`rewiews_id` ASC) VISIBLE,
  INDEX `fk_likes_users1_idx` (`users_id` ASC) VISIBLE,
  INDEX `fk_likes_product1_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `fk_likes_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `shop_cosmetics`.`product` (`id`),
  CONSTRAINT `fk_likes_rewiews1`
    FOREIGN KEY (`rewiews_id`)
    REFERENCES `shop_cosmetics`.`rewiews` (`id`),
  CONSTRAINT `fk_likes_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `shop_cosmetics`.`users` (`id`))
ENGINE = InnoDB;

USE `shop_cosmetics` ;

-- -----------------------------------------------------
-- Placeholder table for view `shop_cosmetics`.`produc_tb1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shop_cosmetics`.`produc_tb1` (`id` INT, `decode` INT, `price` INT, `c_likes` INT, `product_id` INT, `users_id` INT, `name_us` INT, `age` INT);

-- -----------------------------------------------------
-- Placeholder table for view `shop_cosmetics`.`section_tb1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shop_cosmetics`.`section_tb1` (`id` INT, `name` INT, `product_id` INT, `prod_cod` INT, `price` INT, `brand` INT, `c_liks` INT);

-- -----------------------------------------------------
-- procedure product_recomendation
-- -----------------------------------------------------

DELIMITER $$
USE `shop_cosmetics`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `product_recomendation`(IN user_id INT)
BEGIN
	SELECT 
		product_id
	FROM
		shop_cosmetics.rewiews
	WHERE
		profiles_users_id = (SELECT 
				users.id
			FROM
				shop_cosmetics.users
			WHERE
				users.id = user_id) 
	UNION SELECT 
		product_id
	FROM
		likes
	WHERE
		users_id = user_id
	ORDER BY RAND()
	LIMIT 3;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- View `shop_cosmetics`.`produc_tb1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `shop_cosmetics`.`produc_tb1`;
USE `shop_cosmetics`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `shop_cosmetics`.`produc_tb1` AS select `shop_cosmetics`.`product`.`id` AS `id`,`shop_cosmetics`.`product`.`decode` AS `decode`,`shop_cosmetics`.`product`.`price` AS `price`,(select count(`shop_cosmetics`.`likes`.`product_id`) AS `c_pro` from `shop_cosmetics`.`likes` where (`shop_cosmetics`.`likes`.`product_id` = `shop_cosmetics`.`product`.`id`) group by `shop_cosmetics`.`likes`.`product_id`) AS `c_likes`,`shop_cosmetics`.`orders`.`product_id` AS `product_id`,`shop_cosmetics`.`orders`.`users_id` AS `users_id`,concat(`shop_cosmetics`.`users`.`firstname`,' ',`shop_cosmetics`.`users`.`lastname`) AS `name_us`,timestampdiff(YEAR,`shop_cosmetics`.`profiles`.`birthday`,now()) AS `age` from (((`shop_cosmetics`.`product` join `shop_cosmetics`.`orders` on((`shop_cosmetics`.`orders`.`product_id` = `shop_cosmetics`.`product`.`id`))) join `shop_cosmetics`.`users` on((`shop_cosmetics`.`orders`.`users_id` = `shop_cosmetics`.`users`.`id`))) join `shop_cosmetics`.`profiles` on((`shop_cosmetics`.`orders`.`users_id` = `shop_cosmetics`.`profiles`.`users_id`))) order by `c_likes` desc limit 30;

-- -----------------------------------------------------
-- View `shop_cosmetics`.`section_tb1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `shop_cosmetics`.`section_tb1`;
USE `shop_cosmetics`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `shop_cosmetics`.`section_tb1` AS select `shop_cosmetics`.`section`.`id` AS `id`,`shop_cosmetics`.`section`.`name` AS `name`,`shop_cosmetics`.`section`.`product_id` AS `product_id`,(select `shop_cosmetics`.`product`.`decode` from `shop_cosmetics`.`product` where (`shop_cosmetics`.`section`.`product_id` = `shop_cosmetics`.`product`.`id`)) AS `prod_cod`,(select `shop_cosmetics`.`product`.`price` from `shop_cosmetics`.`product` where (`shop_cosmetics`.`section`.`product_id` = `shop_cosmetics`.`product`.`id`)) AS `price`,(select `shop_cosmetics`.`brand`.`brand` from `shop_cosmetics`.`brand` where (`shop_cosmetics`.`section`.`product_id` = `shop_cosmetics`.`brand`.`product_id`)) AS `brand`,(case when ((select count(`shop_cosmetics`.`likes`.`product_id`) from `shop_cosmetics`.`likes` group by `shop_cosmetics`.`likes`.`product_id` having (`shop_cosmetics`.`likes`.`product_id` = `shop_cosmetics`.`section`.`product_id`)) is not null) then (select count(`shop_cosmetics`.`likes`.`product_id`) from `shop_cosmetics`.`likes` group by `shop_cosmetics`.`likes`.`product_id` having (`shop_cosmetics`.`likes`.`product_id` = `shop_cosmetics`.`section`.`product_id`)) else 0 end) AS `c_liks` from `shop_cosmetics`.`section`;
USE `shop_cosmetics`;

DELIMITER $$
USE `shop_cosmetics`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `shop_cosmetics`.`orders_AFTER_INSERT`
AFTER INSERT ON `shop_cosmetics`.`orders`
FOR EACH ROW
BEGIN
INSERT INTO shop_cosmetics.orders (`total`) VALUES (COUNT(orders.product_id)*product.price) as total;
END$$

USE `shop_cosmetics`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `shop_cosmetics`.`orders_AFTER_UPDATE`
AFTER UPDATE ON `shop_cosmetics`.`orders`
FOR EACH ROW
BEGIN
	
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
